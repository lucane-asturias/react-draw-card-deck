{"version":3,"sources":["Card.js","Deck.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","xPos","Math","floor","random","yPos","angle","_transform","style","transform","this","className","src","image","alt","name","Component","API_BASE_URL","Deck","state","deck","drawn","remainCards","getCard","bind","cardReset","a","axios","get","setState","data","id","deck_id","cardUrl","cardRes","success","Error","card","cards","decrementCards","st","code","value","suit","alert","map","c","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89d0d079.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Card.css\";\r\n\r\nclass Card extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t// transform: translate(10px, 20px) rotate(20deg);\r\n\t\tlet xPos = Math.floor(Math.random() * 40 - 20);\r\n\t\tlet yPos = Math.floor(Math.random() * 40 - 20);\r\n\t\tlet angle = Math.floor(Math.random() * 90 - 45);\r\n\t\tthis._transform = `translate(${xPos}px, ${yPos}px) rotate(${angle}deg)`;\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<img \r\n\t\t\t\tstyle={{ transform: this._transform }} \r\n\t\t\t\tclassName=\"Card\" \r\n\t\t\t\tsrc={this.props.image} \r\n\t\t\t\talt={this.props.name} \r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Card;","import React, { Component } from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./Deck.css\";\r\nimport axios from \"axios\";\r\nconst API_BASE_URL = \"https://deckofcardsapi.com/api/deck\";\r\n\r\nclass Deck extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {deck: null, drawn: [], remainCards: 52 };\r\n        this.getCard = this.getCard.bind(this);\r\n        this.cardReset = this.cardReset.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n        let deck = await axios.get(`${API_BASE_URL}/new/shuffle/`);\r\n        this.setState({ deck: deck.data });\r\n    }\r\n    async getCard() {\r\n        let id = this.state.deck.deck_id;\r\n        try {\r\n            let cardUrl = `${API_BASE_URL}/${id}/draw/`;\r\n            let cardRes = await axios.get(cardUrl);\r\n            if (!cardRes.data.success) {\r\n                throw new Error(\"No card remaining!\")\r\n            }\r\n        \r\n            let card = cardRes.data.cards[0];\r\n            let decrementCards = this.state.remainCards--;\r\n            this.setState(st => ({\r\n                drawn: [\r\n                    ...st.drawn,\r\n                    {\r\n                        id: card.code,\r\n                        image: card.image,\r\n                        name: `${card.value} of ${card.suit}`,\r\n                        remainCards: decrementCards\r\n                    }\r\n                ]\r\n            }));\r\n        } catch(err) {\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    async cardReset() {\r\n        let deck = await axios.get(`${API_BASE_URL}/new/shuffle/`);\r\n        this.setState({\r\n            deck: deck.data,\r\n            drawn: [],\r\n            remainCards: 52\r\n        });\r\n    }\r\n\r\n    // https://deckofcardsapi.com/api/deck/${deck_id}/draw\r\n    render() {\r\n        const cards = this.state.drawn.map(c => (\r\n            <Card key={c.id} name={c.name} image={c.image} />\r\n        ));\r\n        return (\r\n            <div>\r\n                <h1 className=\"Deck-title\">\r\n                    <span className=\"Deck-diamond\">♦</span> \r\n                    Card Dealer \r\n                    <span className=\"Deck-diamond\">♦</span>\r\n                </h1>\r\n                <h2 className=\"Deck-title subtitle\">\r\n                    <span className=\"Deck-diamond\">♦</span> \r\n                    A little demo made with React \r\n                    <span className=\"Deck-diamond\">♦</span>\r\n                </h2>\r\n                <button className=\"Deck-btn\" onClick={this.getCard}>Get Card!</button>\r\n                <button className=\"Deck-btn cardreset\" onClick={this.cardReset}>Reset</button>\r\n                <h4 className=\"Deck-remaincards\">Cards Remaining: {this.state.remainCards}</h4>\r\n                <div className=\"Deck-cardarea\">{cards}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Deck;","import React, { Component } from \"react\";\nimport Deck from \"./Deck\"\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Deck />\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}